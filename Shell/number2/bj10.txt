为使s h e l l编程更有效，系统提供了一些 s h e l l变量。s h e l l变量可以保存诸如路径名、文件
名或者一个数字这样的变量名。s h e l l将其中任何设置都看做文本字符串。
有两种变量，本地和环境。严格地说可以有 4种，但其余两种是只读的，可以认为是特殊
变量，它用于向s h e l l脚本传递参数。
本章内容有：
? shell变量。
? 环境变量。
? 变量替换。
? 导出变量。
? 特定变量。
? 向脚本传递信息。
? 在系统命令行下使用位置参数。
变量可以定制用户本身的工作环境。使用变量可以保存有用信息，使系统获知用户相关
设置。变量也用于保存暂时信息


二、本地变量在用户现在的 s h e l l生命期的脚本中使用。例如，本地变量 f i l e - n a m e取值为
l o o p . d o c，这个值只在用户当前s h e l l生命期有意义。如果在s h e l l中启动另一个进程或退出，此
值将无效。这个方法的优点就是用户不能对其他的 s h e l l或进程设置此变量有效
1、变量赋值，
#aa="abcd"

2、显示变量，变量引用需要加$符号
#echo ${aa}  标准取变量写法
#echo $aa    非标准写法，两者效果相同

3、清除变量
#unset aa
#echo $aa 这个时候$aa变量已经为空

4、显示本地所有的变量
# set 

5、变量输出结合
#aa="My"
#bb="name"
#cc="is"
#dd="Alvin"
# echo ${aa} ${bb} ${cc} ${dd}  
# test="$aa $bb $cc $dd"
# echo $test

6、使用变量来保存系统文件路径，或者目录路径
# aa="/tmp/"
# ls $aa
# aa="/tmp/1.txt"
# ls $aa

三、环境变量
环境变量用于所有用户进程（经常称为子进程）。登录进程称为父进程。 shell中执行的用
户进程均称为子进程。不像本地变量（只用于现在的 shell）环境变量可用于所有子进程，这
包括编辑器、脚本和应用。
环境变量可以在命令行中设置，但用户注销时这些值将丢失，因此最好在
. profile文件中
定义。系统管理员可能在 /etc/profile文件中已经设置了一些环境变量。将之放入 profile文件意
味着每次登录时这些值都将被初始化。
传统上，所有环境变量均为大写。环境变量应用于用户进程前，必须用 export命令导出。
环境变量与本地变量设置方式相同

#vim /tmp/test.sh
#!/bin/bash
ls /tmp/

# mv /tmp/alvin.sh /tmp/alvin
# vim /etc/profile
aa="/tmp/"
PATH=$PATH:$aa
export PATH
# source /etc/profile

如果不写入/etc/profile 。那么直限于当前
环境Shell生效。


