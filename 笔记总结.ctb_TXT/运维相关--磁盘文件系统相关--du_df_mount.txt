DU DF MOUNT
du 查看文件或者文件夹的大小
     du - estimate file space usage
     disk  usage
    k、M、G、T、P、E
    1k=1024byte
    1M=1024K
    1G=1024M（兆）
     -h, --human-readable 人类能够读懂的格式显示
              print sizes in human readable  format  (e.g.,  1K
              234M 2G)
    -s, --summarize  汇总所有文件的大小
    du -sh hunan 查看hunan目录总的大小，以人类能够看懂的格式显示
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
linux中df命令的功能是用来检查linux服务器的文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。
1．命令格式：
    df [选项] [文件]
2．命令功能：
    显示指定磁盘文件的可用空间。如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示。默认情况下，磁盘空间将以 1KB 为单位进行显示，除非环境变量 POSIXLY_CORRECT 被指定，那样将以512字节为单位进行显示
3．命令参数：
    必要参数：
    -a 全部文件系统列表
    -h 方便阅读方式显示
    -H 等于“-h”，但是计算式，1K=1000，而不是1K=1024
    -i 显示inode信息
    -k 区块为1024字节
    -l 只显示本地文件系统
    -m 区块为1048576字节
    --no-sync 忽略 sync 命令
    -P 输出格式为POSIX
    --sync 在取得磁盘信息前，先执行sync命令
    -T 文件系统类型
    选择参数：
    --block-size=<区块大小> 指定区块大小
    -t<文件系统类型> 只显示选定文件系统的磁盘信息
    -x<文件系统类型> 不显示选定文件系统的磁盘信息
    --help 显示帮助信息
    --version 显示版本信息
4．使用实例：
    实例1：显示磁盘使用情况
    命令：
    df
    输出：
    [root@CT1190 log]# df
    文件系统               1K-块        已用     可用 已用% 挂载点
    /dev/sda7             19840892    890896  17925856   5% /
    /dev/sda9            203727156 112797500  80413912  59% /opt
        /dev/sda8              4956284    570080   4130372  13% /var
    /dev/sda6             19840892   1977568  16839184  11% /usr
    /dev/sda3               988116     23880    913232   3% /boot
    tmpfs                 16473212         0  16473212   0% /dev/shm
说明：
    linux中df命令的输出清单的第1列是代表文件系统对应的设备文件的路径名（一般是硬盘上的分区）；第2列给出分区包含的数据块（1024字节）的数目；第3，4列分别表示已用的和可用的数据块数目。用户也许会感到奇怪的是，第3，4列块数之和不等于第2列中的块数。这是因为缺省的每个分区都留了少量空间供系统管理员使用。即使遇到普通用户空间已满的情况，管理员仍能登录和留有解决问题所需的工作空间。清单中Use% 列表示普通用户空间使用的百分比，即使这一数字达到100％，分区仍然留有系统管理员使用的空间。最后，Mounted on列表示文件系统的挂载点。
实例2：以inode模式来显示磁盘使用情况
命令：
df -i
输出：
[root@CT1190 log]# df -i
文件系统               Inode (I)已用 (I)可用 (I)已用% 挂载点
/dev/sda7            5124480    5560 5118920    1% /
/dev/sda9            52592640   50519 52542121    1% /opt
/dev/sda8            1280000    8799 1271201    1% /var
/dev/sda6            5124480   80163 5044317    2% /usr
/dev/sda3             255232      34  255198    1% /boot
tmpfs                4118303       1 4118302    1% /dev/shm
说明：
实例3：显示指定类型磁盘
命令：
df -t ext3
输出：
[root@CT1190 log]# df -t ext3
文件系统               1K-块        已用     可用 已用% 挂载点
/dev/sda7             19840892    890896  17925856   5% /
/dev/sda9            203727156  93089700 100121712  49% /opt
/dev/sda8              4956284    570104   4130348  13% /var
/dev/sda6             19840892   1977568  16839184  11% /usr
/dev/sda3               988116     23880    913232   3% /boot
说明：
实例4：列出各文件系统的i节点使用情况
命令：
df -ia
输出：
[root@CT1190 log]# df -ia
文件系统               Inode (I)已用 (I)可用 (I)已用% 挂载点
/dev/sda7            5124480    5560 5118920    1% 
/proc                       0       0       0    -  /proc
sysfs                      0       0       0    -  /sys
devpts                     0       0       0    -  /dev/pts
/dev/sda9            52592640   50519 52542121    1% /opt
/dev/sda8            1280000    8799 1271201    1% /var
/dev/sda6            5124480   80163 5044317    2% /usr
/dev/sda3             255232      34  255198    1% /boot
tmpfs                4118303       1 4118302    1% /dev/shm
none                       0       0       0    -  /proc/sys/fs/binfmt_misc
说明：
实例5：列出文件系统的类型
命令：
df -T
输出：
root@CT1190 log]# df -T
文件系统      类型     1K-块        已用     可用 已用% 挂载点
/dev/sda7     ext3    19840892    890896  17925856   5% /
/dev/sda9     ext3   203727156  93175692 100035720  49% /opt
/dev/sda8     ext3     4956284    570104   4130348  13% /var
/dev/sda6     ext3    19840892   1977568  16839184  11% /usr
/dev/sda3     ext3      988116     23880    913232   3% /boot
tmpfs        tmpfs    16473212         0  16473212   0% /dev/shm
说明：
实例6：以更易读的方式显示目前磁盘空间和使用情况 
命令：
输出：
[root@CT1190 log]# df -h
文件系统              容量  已用 可用 已用% 挂载点
/dev/sda7              19G  871M   18G   5% /
/dev/sda9             195G   89G   96G  49% /opt
/dev/sda8             4.8G  557M  4.0G  13% /var
/dev/sda6              19G  1.9G   17G  11% /usr
/dev/sda3             965M   24M  892M   3% /boot
tmpfs                  16G     0   16G   0% /dev/shm
[root@CT1190 log]# df -H
文件系统               容量   已用  可用 已用% 挂载点
/dev/sda7               21G   913M    19G   5% /
/dev/sda9              209G    96G   103G  49% /opt
/dev/sda8              5.1G   584M   4.3G  13% /var
/dev/sda6               21G   2.1G    18G  11% /usr
/dev/sda3              1.1G    25M   936M   3% /boot
tmpfs                   17G      0    17G   0% /dev/shm
[root@CT1190 log]# df -lh
文件系统              容量  已用 可用 已用% 挂载点
/dev/sda7              19G  871M   18G   5% /
/dev/sda9             195G   89G   96G  49% /opt
/dev/sda8             4.8G  557M  4.0G  13% /var
/dev/sda6              19G  1.9G   17G  11% /usr
/dev/sda3             965M   24M  892M   3% /boot
tmpfs                  16G     0   16G   0% /dev/shm
[root@CT1190 log]# df -k
文件系统               1K-块        已用     可用 已用% 挂载点
/dev/sda7             19840892    890896  17925856   5% /
/dev/sda9            203727156  93292572  99918840  49% /opt
/dev/sda8              4956284    570188   4130264  13% /var
/dev/sda6             19840892   1977568  16839184  11% /usr
/dev/sda3               988116     23880    913232   3% /boot
tmpfs                 16473212         0  16473212   0% /dev/shm
说明：
-h更具目前磁盘空间和使用情况 以更易读的方式显示
-H根上面的-h参数相同,不过在根式化的时候,采用1000而不是1024进行容量转换
-k以单位显示磁盘的使用情况
-l显示本地的分区的磁盘空间使用率,如果服务器nfs了远程服务器的磁盘,那么在df上加上-l后系统显示的是过滤nsf驱动器后的结果
-i显示inode的使用情况。linux采用了类似指针的方式管理磁盘空间影射.这也是一个比较关键应用
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
mount
mount [-参数] [设备名称] [挂载点] 
其中常用的参数有：
-a 安装在/etc/fstab文件中类出的所有文件系统。
-f 伪装mount，作出检查设备和目录的样子，但并不真正挂载文件系统。
-n 不把安装记录在/etc/mtab 文件中。
-r 讲文件系统安装为只读。
-v 详细显示安装信息。
-w 将文件系统安装为可写，为命令默认情况。
-t  指定设备的文件系统类型，常见的有： 
ext2  linux目前常用的文件系统 
msdos  MS-DOS的fat，就是fat16 
vfat  windows98常用的fat32 
nfs  网络文件系统 
iso9660  CD-ROM光盘标准文件系统 
ntfs  windows NT/2000/XP的文件系统 
auto 自动检测文件系统 
-o  指定挂载文件系统时的选项，有些也可写到在/etc/fstab中。常用的有： 
defaults 使用所有选项的默认值（auto、nouser、rw、suid）
auto/noauto 允许/不允许以 –a选项进行安装
dev/nodev 对/不对文件系统上的特殊设备进行解释
exec/noexec 允许/不允许执行二进制代码
suid/nosuid 确认/不确认suid和sgid位
user /nouser 允许/不允许一般用户挂载
codepage=XXX 代码页 
iocharset=XXX 字符集 
ro 以只读方式挂载 
rw 以读写方式挂载 
remount 重新安装已经安装了的文件系统
loop 挂载回旋设备

需要注意的是，挂载点必须是一个已经存在的目录，这个目录可以不为空，但挂载后这个目录下以前的内容将不可用，umount以后会恢复正常。使用多个-o参数的时候，-o 只用一次，参数之间用半角逗号隔开：

CODE:
# mount –o remount,rw /
例如要挂载windows下文件系统为FAT32的D盘，一般而言在Linux下这个分区对应/dev/hda5，根据具体的分区情况会有不同，这里就以hda5来举例说明：
CODE:
# mkdir /mnt/hda5  //创建hda5的目录作为挂载点，位置和目录名可自定义//
# mount -t vfat /dev/hda5 /mnt/hda5
一般而言，Linux会自动探测分区的文件系统，除非让你指定时，否则-t vfat 可以省掉。
CODE:
# mount /dev/hda5 /mnt/hda5
这样就可以进入/mnt/hda5目录去访问分区中的资源了。 
3.      为什么mount上分区后显示不了中文文件为问号/乱码？
显示问号表明你的系统中没有可识别使用的中文字体，请先安装中文字体。确保你的系统已经可以很好的显示中文。显示为乱码一般是mount默认使用的文件系统编码和文件系统中文件的实际编码不一致造成的。要想正常显示中文文件，mount时需要用到 -o 参数里的codepage和iocharset选项。codepage指定文件系统的代码页，简体中文中文代码是936；iocharset指定字符集，简体中文一般用cp936或gb2312。
CODE:
# mount –o iocharset=gb2312 codepage=936 /dev/hda5 /mnt/hda5
一般来说 mount –o iocharset=cp936 /dev/hda5 /mnt/hda5 就可以解决问题了。
如果这样做了以后还有问题，请尝试UTF-8编码：
CODE:
# mount –o iocharset=utf8 /dev/hda5 /mnt/hda5
4.      为什么mount上去以后分区普通用户不可写？
mount时加上 –o umask=000 即可：
CODE:
# mount –o umask=000, iocharset=cp936 /dev/hda5 /mnt/hda5
5.      为什么mount上去后的分区中的文件都变成短文件名了？
这是文件系统挂错的原因，将FAT32挂载成FAT16时就会出现这种情况，先umount，然后用 –t vfat 重新挂载即可解决问题。
CODE:
# mount –t vat /dev/hda5 /mnt/hda5
6.      为什么不能mount ntfs分区？
这是内核不支持NTFS文件系统的原因，请重新编译内核或者安装内核的NTFS文件系统支持包，以使得内核有NTFS文件系统的支持。
7.      如何挂载U盘和mp3？
如果计算机没有其它SCSI设备和usb外设的情况下，插入的U盘的设备路径是 /dev/sda1，用命令：
CODE:
# mkdir /mnt/u
# mount /dev/sda1 /mnt/u
挂载即可。
8.      可以直接使用iso文件吗？
可以，就是mount的这一选项使得Linux下有免费虚拟光驱的说法，具体用法是：
CODE:
# mkdir /mnt/iso 
# mount –o loop linux.iso /mnt/iso
当然，挂载以后挂载点/mnt/iso也是只读的。  
9.      我怎么不可以mount iso文件？
一般而言，大多数的发行版使用的内核均已将loop设备的支持编译进去了，但是也有没有的情况，所以请确保系统所使用的内核支持loop设备。
第二种情况是iso文件被放置到了NTFS或其它只读文件系统中了。挂载loop 设备必须要求挂载到一个可写的分区中，目前Linux内核对NTFS文件系统的写支持非常有限，请将iso文件复制到其它可写文件系统中后再挂载。
10.  如何挂载光驱和软驱
一般来说CDROM的设备文件是/dev/hdc，软驱的设备名是/dev/fd0
CODE:
# mkdir /mnt/cdrom 
# mount /dev/hdc /mnt/cdrom //挂载光驱 //
# mkdir /mnt/floppy  
# mount /dev/fd0 /mnt/floppy   //挂载软驱 //
11.  为何挂载的CD-ROM不能显示中文文件？
使用 –o iocharset=cp936 选项一般能解决问题，否则使用utf-8编码。
CODE:
# mount –o iocharset=cp936 /dev/hdc /mnt/cdrom
12.  如何开机自动挂载分区？
每次挂载都要输入那么长的命令的确是繁琐了些，只要将分区信息写到/etc/fstab文件中即可实现系统启动的自动挂载，例如对于/dev/hda5的自动挂载添加如下的行即可：
CODE:
/dev/hda5 /mnt/hda5 vfat defaults,iocharset=cp936, rw 0 0
13.  如何挂载samba 分区？
CODE:
# mkdir /mnt/share
# mount -t smbfs -o username=root,password=abc,codepage=936,iocharset=gb2312//192.168.1.100/share  /mnt/share
如果中文显示不正常请尝试UTF-8编码。当然可以写到fstab中实现自动挂载。
14.  mount --bind是什么意思？ 
mount --bind 是将一个目录中的内容挂载到另一个目录上，用法是
CODE:
# mount --bind olddir newdir
这个命令使得自己搭建的FTP要共享某个目录的时候变得特别方便。如果要取消mount用命令：
CODE:
# mount --move olddir newdir 即可。
如果mount --bind 也想写入fstab中的话格式如下：
CODE:
olddir newdir none bind 0 0
15.  umount基本用法是？
譬如 /dev/hda5 已经挂载在/mnt/hda5上,用一下三条命令均可卸载挂载的文件系统
CODE:
# umount /dev/hda5
# umount /mnt/hda5
# umount /dev/hda5 /mnt/hda5
16.  为什么umount的时候老显示 device busy？
这是因为有程序正在访问这个设备，最简单的办法就是让访问该设备的程序退出以后再umount。可能有时候用户搞不清除究竟是什么程序在访问设备，如果用户不急着umount，则可以用:
CODE:
# umount -l /mnt/hda5
来卸载设备。选项 –l 并不是马上umount，而是在该目录空闲后再umount。还可以先用命令 ps aux 来查看占用设备的程序PID，然后用命令kill来杀死占用设备的进程，这样就umount的非常放心了。

 方法一：
fuser -m -v /nfs_old/
          用户  进程号  权限   命令
/nfs_old/:   root  2699    ..c..  bash
          root  2999    ..c..  su
如上所示，有两个进程占用了，将其kill掉，再重新取消挂载。
kill -9 2699 2999
umount /nfs_old/

方法二：
umount  -l  /nfs_old/

方法三：
fuser -km /nfs_old/


DU DF MOUNT
du 查看文件或者文件夹的大小
     du - estimate file space usage
     disk  usage
    k、M、G、T、P、E
    1k=1024byte
    1M=1024K
    1G=1024M（兆）
     -h, --human-readable 人类能够读懂的格式显示
              print sizes in human readable  format  (e.g.,  1K
              234M 2G)
    -s, --summarize  汇总所有文件的大小
    du -sh hunan 查看hunan目录总的大小，以人类能够看懂的格式显示
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
linux中df命令的功能是用来检查linux服务器的文件系统的磁盘空间占用情况。可以利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。
1．命令格式：
    df [选项] [文件]
2．命令功能：
    显示指定磁盘文件的可用空间。如果没有文件名被指定，则所有当前被挂载的文件系统的可用空间将被显示。默认情况下，磁盘空间将以 1KB 为单位进行显示，除非环境变量 POSIXLY_CORRECT 被指定，那样将以512字节为单位进行显示
3．命令参数：
    必要参数：
    -a 全部文件系统列表
    -h 方便阅读方式显示
    -H 等于“-h”，但是计算式，1K=1000，而不是1K=1024
    -i 显示inode信息
    -k 区块为1024字节
    -l 只显示本地文件系统
    -m 区块为1048576字节
    --no-sync 忽略 sync 命令
    -P 输出格式为POSIX
    --sync 在取得磁盘信息前，先执行sync命令
    -T 文件系统类型
    选择参数：
    --block-size=<区块大小> 指定区块大小
    -t<文件系统类型> 只显示选定文件系统的磁盘信息
    -x<文件系统类型> 不显示选定文件系统的磁盘信息
    --help 显示帮助信息
    --version 显示版本信息
4．使用实例：
    实例1：显示磁盘使用情况
    命令：
    df
    输出：
    [root@CT1190 log]# df
    文件系统               1K-块        已用     可用 已用% 挂载点
    /dev/sda7             19840892    890896  17925856   5% /
    /dev/sda9            203727156 112797500  80413912  59% /opt
        /dev/sda8              4956284    570080   4130372  13% /var
    /dev/sda6             19840892   1977568  16839184  11% /usr
    /dev/sda3               988116     23880    913232   3% /boot
    tmpfs                 16473212         0  16473212   0% /dev/shm
说明：
    linux中df命令的输出清单的第1列是代表文件系统对应的设备文件的路径名（一般是硬盘上的分区）；第2列给出分区包含的数据块（1024字节）的数目；第3，4列分别表示已用的和可用的数据块数目。用户也许会感到奇怪的是，第3，4列块数之和不等于第2列中的块数。这是因为缺省的每个分区都留了少量空间供系统管理员使用。即使遇到普通用户空间已满的情况，管理员仍能登录和留有解决问题所需的工作空间。清单中Use% 列表示普通用户空间使用的百分比，即使这一数字达到100％，分区仍然留有系统管理员使用的空间。最后，Mounted on列表示文件系统的挂载点。
实例2：以inode模式来显示磁盘使用情况
命令：
df -i
输出：
[root@CT1190 log]# df -i
文件系统               Inode (I)已用 (I)可用 (I)已用% 挂载点
/dev/sda7            5124480    5560 5118920    1% /
/dev/sda9            52592640   50519 52542121    1% /opt
/dev/sda8            1280000    8799 1271201    1% /var
/dev/sda6            5124480   80163 5044317    2% /usr
/dev/sda3             255232      34  255198    1% /boot
tmpfs                4118303       1 4118302    1% /dev/shm
说明：
实例3：显示指定类型磁盘
命令：
df -t ext3
输出：
[root@CT1190 log]# df -t ext3
文件系统               1K-块        已用     可用 已用% 挂载点
/dev/sda7             19840892    890896  17925856   5% /
/dev/sda9            203727156  93089700 100121712  49% /opt
/dev/sda8              4956284    570104   4130348  13% /var
/dev/sda6             19840892   1977568  16839184  11% /usr
/dev/sda3               988116     23880    913232   3% /boot
说明：
实例4：列出各文件系统的i节点使用情况
命令：
df -ia
输出：
[root@CT1190 log]# df -ia
文件系统               Inode (I)已用 (I)可用 (I)已用% 挂载点
/dev/sda7            5124480    5560 5118920    1% 
/proc                       0       0       0    -  /proc
sysfs                      0       0       0    -  /sys
devpts                     0       0       0    -  /dev/pts
/dev/sda9            52592640   50519 52542121    1% /opt
/dev/sda8            1280000    8799 1271201    1% /var
/dev/sda6            5124480   80163 5044317    2% /usr
/dev/sda3             255232      34  255198    1% /boot
tmpfs                4118303       1 4118302    1% /dev/shm
none                       0       0       0    -  /proc/sys/fs/binfmt_misc
说明：
实例5：列出文件系统的类型
命令：
df -T
输出：
root@CT1190 log]# df -T
文件系统      类型     1K-块        已用     可用 已用% 挂载点
/dev/sda7     ext3    19840892    890896  17925856   5% /
/dev/sda9     ext3   203727156  93175692 100035720  49% /opt
/dev/sda8     ext3     4956284    570104   4130348  13% /var
/dev/sda6     ext3    19840892   1977568  16839184  11% /usr
/dev/sda3     ext3      988116     23880    913232   3% /boot
tmpfs        tmpfs    16473212         0  16473212   0% /dev/shm
说明：
实例6：以更易读的方式显示目前磁盘空间和使用情况 
命令：
输出：
[root@CT1190 log]# df -h
文件系统              容量  已用 可用 已用% 挂载点
/dev/sda7              19G  871M   18G   5% /
/dev/sda9             195G   89G   96G  49% /opt
/dev/sda8             4.8G  557M  4.0G  13% /var
/dev/sda6              19G  1.9G   17G  11% /usr
/dev/sda3             965M   24M  892M   3% /boot
tmpfs                  16G     0   16G   0% /dev/shm
[root@CT1190 log]# df -H
文件系统               容量   已用  可用 已用% 挂载点
/dev/sda7               21G   913M    19G   5% /
/dev/sda9              209G    96G   103G  49% /opt
/dev/sda8              5.1G   584M   4.3G  13% /var
/dev/sda6               21G   2.1G    18G  11% /usr
/dev/sda3              1.1G    25M   936M   3% /boot
tmpfs                   17G      0    17G   0% /dev/shm
[root@CT1190 log]# df -lh
文件系统              容量  已用 可用 已用% 挂载点
/dev/sda7              19G  871M   18G   5% /
/dev/sda9             195G   89G   96G  49% /opt
/dev/sda8             4.8G  557M  4.0G  13% /var
/dev/sda6              19G  1.9G   17G  11% /usr
/dev/sda3             965M   24M  892M   3% /boot
tmpfs                  16G     0   16G   0% /dev/shm
[root@CT1190 log]# df -k
文件系统               1K-块        已用     可用 已用% 挂载点
/dev/sda7             19840892    890896  17925856   5% /
/dev/sda9            203727156  93292572  99918840  49% /opt
/dev/sda8              4956284    570188   4130264  13% /var
/dev/sda6             19840892   1977568  16839184  11% /usr
/dev/sda3               988116     23880    913232   3% /boot
tmpfs                 16473212         0  16473212   0% /dev/shm
说明：
-h更具目前磁盘空间和使用情况 以更易读的方式显示
-H根上面的-h参数相同,不过在根式化的时候,采用1000而不是1024进行容量转换
-k以单位显示磁盘的使用情况
-l显示本地的分区的磁盘空间使用率,如果服务器nfs了远程服务器的磁盘,那么在df上加上-l后系统显示的是过滤nsf驱动器后的结果
-i显示inode的使用情况。linux采用了类似指针的方式管理磁盘空间影射.这也是一个比较关键应用
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
mount
mount [-参数] [设备名称] [挂载点] 
其中常用的参数有：
-a 安装在/etc/fstab文件中类出的所有文件系统。
-f 伪装mount，作出检查设备和目录的样子，但并不真正挂载文件系统。
-n 不把安装记录在/etc/mtab 文件中。
-r 讲文件系统安装为只读。
-v 详细显示安装信息。
-w 将文件系统安装为可写，为命令默认情况。
-t  指定设备的文件系统类型，常见的有： 
ext2  linux目前常用的文件系统 
msdos  MS-DOS的fat，就是fat16 
vfat  windows98常用的fat32 
nfs  网络文件系统 
iso9660  CD-ROM光盘标准文件系统 
ntfs  windows NT/2000/XP的文件系统 
auto 自动检测文件系统 
-o  指定挂载文件系统时的选项，有些也可写到在/etc/fstab中。常用的有： 
defaults 使用所有选项的默认值（auto、nouser、rw、suid）
auto/noauto 允许/不允许以 –a选项进行安装
dev/nodev 对/不对文件系统上的特殊设备进行解释
exec/noexec 允许/不允许执行二进制代码
suid/nosuid 确认/不确认suid和sgid位
user /nouser 允许/不允许一般用户挂载
codepage=XXX 代码页 
iocharset=XXX 字符集 
ro 以只读方式挂载 
rw 以读写方式挂载 
remount 重新安装已经安装了的文件系统
loop 挂载回旋设备

需要注意的是，挂载点必须是一个已经存在的目录，这个目录可以不为空，但挂载后这个目录下以前的内容将不可用，umount以后会恢复正常。使用多个-o参数的时候，-o 只用一次，参数之间用半角逗号隔开：

CODE:
# mount –o remount,rw /
例如要挂载windows下文件系统为FAT32的D盘，一般而言在Linux下这个分区对应/dev/hda5，根据具体的分区情况会有不同，这里就以hda5来举例说明：
CODE:
# mkdir /mnt/hda5  //创建hda5的目录作为挂载点，位置和目录名可自定义//
# mount -t vfat /dev/hda5 /mnt/hda5
一般而言，Linux会自动探测分区的文件系统，除非让你指定时，否则-t vfat 可以省掉。
CODE:
# mount /dev/hda5 /mnt/hda5
这样就可以进入/mnt/hda5目录去访问分区中的资源了。 
3.      为什么mount上分区后显示不了中文文件为问号/乱码？
显示问号表明你的系统中没有可识别使用的中文字体，请先安装中文字体。确保你的系统已经可以很好的显示中文。显示为乱码一般是mount默认使用的文件系统编码和文件系统中文件的实际编码不一致造成的。要想正常显示中文文件，mount时需要用到 -o 参数里的codepage和iocharset选项。codepage指定文件系统的代码页，简体中文中文代码是936；iocharset指定字符集，简体中文一般用cp936或gb2312。
CODE:
# mount –o iocharset=gb2312 codepage=936 /dev/hda5 /mnt/hda5
一般来说 mount –o iocharset=cp936 /dev/hda5 /mnt/hda5 就可以解决问题了。
如果这样做了以后还有问题，请尝试UTF-8编码：
CODE:
# mount –o iocharset=utf8 /dev/hda5 /mnt/hda5
4.      为什么mount上去以后分区普通用户不可写？
mount时加上 –o umask=000 即可：
CODE:
# mount –o umask=000, iocharset=cp936 /dev/hda5 /mnt/hda5
5.      为什么mount上去后的分区中的文件都变成短文件名了？
这是文件系统挂错的原因，将FAT32挂载成FAT16时就会出现这种情况，先umount，然后用 –t vfat 重新挂载即可解决问题。
CODE:
# mount –t vat /dev/hda5 /mnt/hda5
6.      为什么不能mount ntfs分区？
这是内核不支持NTFS文件系统的原因，请重新编译内核或者安装内核的NTFS文件系统支持包，以使得内核有NTFS文件系统的支持。
7.      如何挂载U盘和mp3？
如果计算机没有其它SCSI设备和usb外设的情况下，插入的U盘的设备路径是 /dev/sda1，用命令：
CODE:
# mkdir /mnt/u
# mount /dev/sda1 /mnt/u
挂载即可。
8.      可以直接使用iso文件吗？
可以，就是mount的这一选项使得Linux下有免费虚拟光驱的说法，具体用法是：
CODE:
# mkdir /mnt/iso 
# mount –o loop linux.iso /mnt/iso
当然，挂载以后挂载点/mnt/iso也是只读的。  
9.      我怎么不可以mount iso文件？
一般而言，大多数的发行版使用的内核均已将loop设备的支持编译进去了，但是也有没有的情况，所以请确保系统所使用的内核支持loop设备。
第二种情况是iso文件被放置到了NTFS或其它只读文件系统中了。挂载loop 设备必须要求挂载到一个可写的分区中，目前Linux内核对NTFS文件系统的写支持非常有限，请将iso文件复制到其它可写文件系统中后再挂载。
10.  如何挂载光驱和软驱
一般来说CDROM的设备文件是/dev/hdc，软驱的设备名是/dev/fd0
CODE:
# mkdir /mnt/cdrom 
# mount /dev/hdc /mnt/cdrom //挂载光驱 //
# mkdir /mnt/floppy  
# mount /dev/fd0 /mnt/floppy   //挂载软驱 //
11.  为何挂载的CD-ROM不能显示中文文件？
使用 –o iocharset=cp936 选项一般能解决问题，否则使用utf-8编码。
CODE:
# mount –o iocharset=cp936 /dev/hdc /mnt/cdrom
12.  如何开机自动挂载分区？
每次挂载都要输入那么长的命令的确是繁琐了些，只要将分区信息写到/etc/fstab文件中即可实现系统启动的自动挂载，例如对于/dev/hda5的自动挂载添加如下的行即可：
CODE:
/dev/hda5 /mnt/hda5 vfat defaults,iocharset=cp936, rw 0 0
13.  如何挂载samba 分区？
CODE:
# mkdir /mnt/share
# mount -t smbfs -o username=root,password=abc,codepage=936,iocharset=gb2312//192.168.1.100/share  /mnt/share
如果中文显示不正常请尝试UTF-8编码。当然可以写到fstab中实现自动挂载。
14.  mount --bind是什么意思？ 
mount --bind 是将一个目录中的内容挂载到另一个目录上，用法是
CODE:
# mount --bind olddir newdir
这个命令使得自己搭建的FTP要共享某个目录的时候变得特别方便。如果要取消mount用命令：
CODE:
# mount --move olddir newdir 即可。
如果mount --bind 也想写入fstab中的话格式如下：
CODE:
olddir newdir none bind 0 0
15.  umount基本用法是？
譬如 /dev/hda5 已经挂载在/mnt/hda5上,用一下三条命令均可卸载挂载的文件系统
CODE:
# umount /dev/hda5
# umount /mnt/hda5
# umount /dev/hda5 /mnt/hda5
16.  为什么umount的时候老显示 device busy？
这是因为有程序正在访问这个设备，最简单的办法就是让访问该设备的程序退出以后再umount。可能有时候用户搞不清除究竟是什么程序在访问设备，如果用户不急着umount，则可以用:
CODE:
# umount -l /mnt/hda5
来卸载设备。选项 –l 并不是马上umount，而是在该目录空闲后再umount。还可以先用命令 ps aux 来查看占用设备的程序PID，然后用命令kill来杀死占用设备的进程，这样就umount的非常放心了。

 方法一：
fuser -m -v /nfs_old/
          用户  进程号  权限   命令
/nfs_old/:   root  2699    ..c..  bash
          root  2999    ..c..  su
如上所示，有两个进程占用了，将其kill掉，再重新取消挂载。
kill -9 2699 2999
umount /nfs_old/

方法二：
umount  -l  /nfs_old/

方法三：
fuser -km /nfs_old/


